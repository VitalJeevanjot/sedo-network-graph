// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Domain_Added extends ethereum.Event {
  get params(): Domain_Added__Params {
    return new Domain_Added__Params(this);
  }
}

export class Domain_Added__Params {
  _event: Domain_Added;

  constructor(event: Domain_Added) {
    this._event = event;
  }

  get curr_owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get domain(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Sedo_Network__entityResult {
  value0: Address;
  value1: Address;
  value2: boolean;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: BigInt;
  value9: Address;
  value10: boolean;
  value11: string;
  value12: string;

  constructor(
    value0: Address,
    value1: Address,
    value2: boolean,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: BigInt,
    value9: Address,
    value10: boolean,
    value11: string,
    value12: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    map.set("value11", ethereum.Value.fromString(this.value11));
    map.set("value12", ethereum.Value.fromString(this.value12));
    return map;
  }
}

export class Sedo_Network extends ethereum.SmartContract {
  static bind(address: Address): Sedo_Network {
    return new Sedo_Network("Sedo_Network", address);
  }

  entity(param0: string): Sedo_Network__entityResult {
    let result = super.call(
      "entity",
      "entity(string):(address,address,bool,uint256,bool,uint256,uint256,bool,uint256,address,bool,string,string)",
      [ethereum.Value.fromString(param0)]
    );

    return new Sedo_Network__entityResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBigInt(),
      result[9].toAddress(),
      result[10].toBoolean(),
      result[11].toString(),
      result[12].toString()
    );
  }

  try_entity(param0: string): ethereum.CallResult<Sedo_Network__entityResult> {
    let result = super.tryCall(
      "entity",
      "entity(string):(address,address,bool,uint256,bool,uint256,uint256,bool,uint256,address,bool,string,string)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sedo_Network__entityResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBigInt(),
        value[9].toAddress(),
        value[10].toBoolean(),
        value[11].toString(),
        value[12].toString()
      )
    );
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  recentBuyerEmailHash(): Bytes {
    let result = super.call(
      "recentBuyerEmailHash",
      "recentBuyerEmailHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_recentBuyerEmailHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "recentBuyerEmailHash",
      "recentBuyerEmailHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  recentTXTResponse(): BigInt {
    let result = super.call(
      "recentTXTResponse",
      "recentTXTResponse():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_recentTXTResponse(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "recentTXTResponse",
      "recentTXTResponse():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  recentTxTRequestId(): Bytes {
    let result = super.call(
      "recentTxTRequestId",
      "recentTxTRequestId():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_recentTxTRequestId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "recentTxTRequestId",
      "recentTxTRequestId():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  recentWhoisHash(): Bytes {
    let result = super.call(
      "recentWhoisHash",
      "recentWhoisHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_recentWhoisHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "recentWhoisHash",
      "recentWhoisHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  recentWhoisRequestId(): Bytes {
    let result = super.call(
      "recentWhoisRequestId",
      "recentWhoisRequestId():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_recentWhoisRequestId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "recentWhoisRequestId",
      "recentWhoisRequestId():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  releaseFunds(domain: string): Bytes {
    let result = super.call("releaseFunds", "releaseFunds(string):(bytes32)", [
      ethereum.Value.fromString(domain)
    ]);

    return result[0].toBytes();
  }

  try_releaseFunds(domain: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "releaseFunds",
      "releaseFunds(string):(bytes32)",
      [ethereum.Value.fromString(domain)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  requestIds(param0: Bytes): string {
    let result = super.call("requestIds", "requestIds(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toString();
  }

  try_requestIds(param0: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall("requestIds", "requestIds(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  usersToWithdraw(param0: Bytes): Address {
    let result = super.call(
      "usersToWithdraw",
      "usersToWithdraw(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_usersToWithdraw(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "usersToWithdraw",
      "usersToWithdraw(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifyDomain(domain: string): Bytes {
    let result = super.call("verifyDomain", "verifyDomain(string):(bytes32)", [
      ethereum.Value.fromString(domain)
    ]);

    return result[0].toBytes();
  }

  try_verifyDomain(domain: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "verifyDomain",
      "verifyDomain(string):(bytes32)",
      [ethereum.Value.fromString(domain)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyDomainCall extends ethereum.Call {
  get inputs(): BuyDomainCall__Inputs {
    return new BuyDomainCall__Inputs(this);
  }

  get outputs(): BuyDomainCall__Outputs {
    return new BuyDomainCall__Outputs(this);
  }
}

export class BuyDomainCall__Inputs {
  _call: BuyDomainCall;

  constructor(call: BuyDomainCall) {
    this._call = call;
  }

  get domain(): string {
    return this._call.inputValues[0].value.toString();
  }

  get email_address(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class BuyDomainCall__Outputs {
  _call: BuyDomainCall;

  constructor(call: BuyDomainCall) {
    this._call = call;
  }
}

export class FulfillTXTCall extends ethereum.Call {
  get inputs(): FulfillTXTCall__Inputs {
    return new FulfillTXTCall__Inputs(this);
  }

  get outputs(): FulfillTXTCall__Outputs {
    return new FulfillTXTCall__Outputs(this);
  }
}

export class FulfillTXTCall__Inputs {
  _call: FulfillTXTCall;

  constructor(call: FulfillTXTCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get txt_value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FulfillTXTCall__Outputs {
  _call: FulfillTXTCall;

  constructor(call: FulfillTXTCall) {
    this._call = call;
  }
}

export class FulfillWhoisCall extends ethereum.Call {
  get inputs(): FulfillWhoisCall__Inputs {
    return new FulfillWhoisCall__Inputs(this);
  }

  get outputs(): FulfillWhoisCall__Outputs {
    return new FulfillWhoisCall__Outputs(this);
  }
}

export class FulfillWhoisCall__Inputs {
  _call: FulfillWhoisCall;

  constructor(call: FulfillWhoisCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get whois_email(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FulfillWhoisCall__Outputs {
  _call: FulfillWhoisCall;

  constructor(call: FulfillWhoisCall) {
    this._call = call;
  }
}

export class Fulfill_randomCall extends ethereum.Call {
  get inputs(): Fulfill_randomCall__Inputs {
    return new Fulfill_randomCall__Inputs(this);
  }

  get outputs(): Fulfill_randomCall__Outputs {
    return new Fulfill_randomCall__Outputs(this);
  }
}

export class Fulfill_randomCall__Inputs {
  _call: Fulfill_randomCall;

  constructor(call: Fulfill_randomCall) {
    this._call = call;
  }

  get randomness(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get domain(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class Fulfill_randomCall__Outputs {
  _call: Fulfill_randomCall;

  constructor(call: Fulfill_randomCall) {
    this._call = call;
  }
}

export class PutDomainCall extends ethereum.Call {
  get inputs(): PutDomainCall__Inputs {
    return new PutDomainCall__Inputs(this);
  }

  get outputs(): PutDomainCall__Outputs {
    return new PutDomainCall__Outputs(this);
  }
}

export class PutDomainCall__Inputs {
  _call: PutDomainCall;

  constructor(call: PutDomainCall) {
    this._call = call;
  }

  get domain_name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get onSale(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PutDomainCall__Outputs {
  _call: PutDomainCall;

  constructor(call: PutDomainCall) {
    this._call = call;
  }
}

export class ReleaseFundsCall extends ethereum.Call {
  get inputs(): ReleaseFundsCall__Inputs {
    return new ReleaseFundsCall__Inputs(this);
  }

  get outputs(): ReleaseFundsCall__Outputs {
    return new ReleaseFundsCall__Outputs(this);
  }
}

export class ReleaseFundsCall__Inputs {
  _call: ReleaseFundsCall;

  constructor(call: ReleaseFundsCall) {
    this._call = call;
  }

  get domain(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ReleaseFundsCall__Outputs {
  _call: ReleaseFundsCall;

  constructor(call: ReleaseFundsCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class VerifyDomainCall extends ethereum.Call {
  get inputs(): VerifyDomainCall__Inputs {
    return new VerifyDomainCall__Inputs(this);
  }

  get outputs(): VerifyDomainCall__Outputs {
    return new VerifyDomainCall__Outputs(this);
  }
}

export class VerifyDomainCall__Inputs {
  _call: VerifyDomainCall;

  constructor(call: VerifyDomainCall) {
    this._call = call;
  }

  get domain(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class VerifyDomainCall__Outputs {
  _call: VerifyDomainCall;

  constructor(call: VerifyDomainCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}
